version: "3.8"

x-websocket-environment:
  &ws-env
  YJS_IN_ERLANG_NODES: "${NODES}"
  COOKIE: "yjs_in_erlang"
  YJS_IN_ERLANG_STORE_DIR: "/mnt"

x-websocket-default: &default-websocket
  image: yjs_in_erlang_websocket:${IMAGE_TAG:-latest}
  networks:
    - app_network
  volumes:
    - ./data:/mnt

services:
  yjs_in_erlang_websocket_server1:
    <<: *default-websocket
    hostname: yjs_in_erlang_websocket_server1.com
    container_name: yjs_in_erlang_websocket_server1
    ports:
      - "3001:3000"
    environment:
      <<: *ws-env
      ERLANG_NODE_NAME: "yjs_in_erlang@yjs_in_erlang_websocket_server1.com"

  yjs_in_erlang_websocket_server2:
    <<: *default-websocket
    hostname: yjs_in_erlang_websocket_server2.com
    container_name: yjs_in_erlang_websocket_server2
    ports:
      - "3002:3000"
    environment:
      <<: *ws-env
      ERLANG_NODE_NAME: "yjs_in_erlang@yjs_in_erlang_websocket_server2.com"

  yjs_in_erlang_websocket_server3:
    <<: *default-websocket
    hostname: yjs_in_erlang_websocket_server3.com
    container_name: yjs_in_erlang_websocket_server3
    ports:
      - "3003:3000"
    environment:
      <<: *ws-env
      ERLANG_NODE_NAME: "yjs_in_erlang@yjs_in_erlang_websocket_server3.com"

  nginx:
    image: nginx:latest
    container_name: nginx_lb
    ports:
      - "3000:3000"  # Expose the load balancer on port 3000
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app_network
    depends_on:
      - yjs_in_erlang_websocket_server1
      - yjs_in_erlang_websocket_server2
      - yjs_in_erlang_websocket_server3

networks:
  app_network:
    driver: bridge
